openapi: '3.0.3'

info:
  description: CSE 115a Project
  version: 0.1.0
  title: Slug Sync

servers:
  - url: http://localhost:3010/v0

paths:
  /goal:
    post:
      tags:
        - create goal
      summary: create goal
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalWithId'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        description: create goal
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGoal'
    get:
      tags:
        - get goals
      summary: get goals
      parameters:
        - name: page
          in: query
          description: Page number
          required: true
          schema:
            additionalProperties: false
            type: integer
        - name: size
          in: query
          description: Number of goals per page
          required: false
          schema:
            additionalProperties: false
            type: number
        - name: tag
          in: query
          description: Tag to filter with
          required: false
          schema:
            additionalProperties: false
            type: string
            nullable: true
        - name: search
          in: query
          description: Search term
          schema:
            additionalProperties: false
            type: string
            nullable: true
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goals'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /signup:
    post:
      description: User SignUp
      requestBody:
        description: User form fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpForm'
      responses:
        201:
          description: Successfully creates User

  /login:
    post:
      description: User login
      requestBody:
        description: Form fields for login
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginForm'
      responses:
        200:
          description: Successfully logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'

  /goal/{id}:
    get:
      tags:
        - get goal
      summary: get goal
      parameters:
        - name: id
          in: path
          description: Id of goal
          required: true
          schema:
            additionalProperties: false
            type: string
            format: uuid
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalWithId'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: error code
        message:
          type: string
          description: error message
    CreateGoal:
      type: object
      required:
        - title
        - description
        - recurrence
      properties:
        title:
          type: string
          description: title of goal
        description:
          type: string
          description: description of goal
        recurrence:
          type: string
          description: recurrence of goal
      example:
        title: "title"
        description: "description"
        recurrence: "1"
    GoalWithId:
      type: object
      required:
        - id
        - title
        - description
        - recurrence
      properties:
        id:
          type: string
          format: uuid
          description: id of goal
        title:
          type: string
          description: title of goal
        description:
          type: string
          description: description of goal
        recurrence:
          type: string
          description: recurrence of goal
      example:
        id: "1"
        title: "title"
        description: "description"
        recurrence: "1"
    Goals:
      type: array
      items:
        $ref: '#/components/schemas/GoalWithId'
    SignUpForm:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        email:
          type: string
          format: email
          pattern: '^[\w\.-]+@[a-zA-Z\d\.-]+\.[a-zA-Z]{2,}$'
        password:
          type: string
      required:
        - name
        - email
        - password

    LoginForm:
      type: object
      additionalProperties: false
      properties:
        email:
          type: string
          format: email
          pattern: '^[\w\.-]+@[a-zA-Z\d\.-]+\.[a-zA-Z]{2,}$'
        password:
          type: string
      required:
        - email
        - password

    LoginResponse:
      type: object
      properties:
        token:
          type: string
      required:
        - token

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
