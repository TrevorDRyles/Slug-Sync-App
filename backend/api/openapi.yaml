openapi: '3.0.3'

info:
  description: CSE 115a Project
  version: 0.1.0
  title: Slug Sync

servers:
  - url: http://localhost:3010/v0

paths:
  /user/{id}:
    get:
      tags:
        - get user
      summary: get user
      parameters:
        - name: id
          in: path
          description: Id of user
          required: true
          schema:
            additionalProperties: false
            type: string
            format: uuid
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /goal:
    post:
      tags:
        - create goal
      summary: create goal
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalWithId'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      requestBody:
        description: create goal
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGoal'
      security:
        - bearerAuth: []
    get:
      tags:
        - get goals
      summary: get goals
      parameters:
        - name: page
          in: query
          description: Page number
          required: true
          schema:
            additionalProperties: false
            type: integer
        - name: size
          in: query
          description: Number of goals per page
          required: false
          schema:
            additionalProperties: false
            type: number
        - name: search
          in: query
          description: Search term
          schema:
            additionalProperties: false
            type: string
            nullable: true
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Goals'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /goal/{id}/join:
    post:
      tags:
        - join goal
      summary: Join a goal
      parameters:
        - name: id
          in: path
          description: Id of the goal
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Successful join
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JoinedGoalResponse'
        400:
          description: Bad request. Already joined goal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyJoinedGoalResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /goal/{id}/leave:
    post:
      tags:
        - leave goal
      summary: Leave a goal
      parameters:
        - name: id
          in: path
          description: Id of the goal
          required: true
          schema:
            type: string
            format: uuid
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successfully left the goal
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LeftGoalResponse'
        401:
          description: Unauthorized
        404:
          description: Goal not found
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /signup:
    post:
      description: User SignUp
      requestBody:
        description: User form fields
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpForm'
      responses:
        201:
          description: Successfully creates User

  /login:
    post:
      description: User login
      requestBody:
        description: Form fields for login
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginForm'
      responses:
        200:
          description: Successfully logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'

  /goal/{id}:
    get:
      tags:
        - get goal
      summary: get goal
      parameters:
        - name: id
          in: path
          description: Id of goal
          required: true
          schema:
            additionalProperties: false
            type: string
            format: uuid
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GoalWithId'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - delete goal
      summary: delete goal
      parameters:
        - name: id
          in: path
          description: Id of goal
          required: true
          schema:
            additionalProperties: false
            type: string
            format: uuid
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successful
        401:
          description: Unauthorized
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /goal/{id}/comment:
    post:
      security:
        - bearerAuth: []
      tags:
        - Post a new comment on a goal
      summary: Post a new comment on a goal
      parameters:
        - name: id
          in: path
          description: Id of goal
          required: true
          schema:
            additionalProperties: false
            type: string
            format: uuid
      requestBody:
        description: add comment to goal
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - get comments
      summary: get all comments
      parameters:
        - name: id
          in: path
          description: Id of goal
          required: true
          schema:
            additionalProperties: false
            type: string
            format: uuid
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                    $ref: '#/components/schemas/CommentResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /goal/completed:
    get:
      security:
        - bearerAuth: []
      description: Get all completed goals from a user
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GoalWithId'
  
  /goal/incompleted:
    get:
      security:
        - bearerAuth: []
      description: Get all incompleted goals from a user
      responses:
        200:
          description: Successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GoalWithId'
  
  /complete/{goal}:
    put:
      security:
        - bearerAuth: []
      description: Complete a goal
      parameters:
        - name: goal
          in: path
          description: id of the goal
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Goal completed
          content:
            application/json:
              schema:
                type: object
                properties:
                  goal_id:
                    type: string
                    format: uuid
                required:
                  - goal_id
                additionalProperties: false


components:
  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          description: error code
        message:
          type: string
          description: error message
    CreateGoal:
      type: object
      required:
        - title
        - description
        - recurrence
        - startdate
        - enddate
      properties:
        title:
          type: string
          description: title of goal
        description:
          type: string
          description: description of goal
        recurrence:
          type: string
          description: recurrence of goal
        startdate:
          type: string
          description: start date of goal
        enddate:
          type: string
          description: end date of goal
      example:
        title: "title"
        description: "description"
        recurrence: "1"
    Comment:
      type: object
      required:
        - content
      properties:
        content:
          type: string
          description: content of comment
        date:
          type: string
          format: date-time
          description: date of comment
    CommentResponse:
      type: object
      properties:
        content:
          type: string
          description: content of comment
        id:
          type: string
          description: id of comment
        username:
          type: string
          description: username of comment
        date:
          type: string
          description: date of comment
      example:
        id: "1"
        description: "new comment"
    GoalWithId:
      type: object
      required:
        - id
        - title
        - description
        - recurrence
        - startdate
        - enddate
      properties:
        id:
          type: string
          format: uuid
          description: id of goal
        title:
          type: string
          description: title of goal
        description:
          type: string
          description: description of goal
        recurrence:
          type: string
          description: recurrence of goal
        startdate:
          type: string
          description: start date of goal
        enddate:
          type: string
          description: end date of goal
      example:
        id: "1"
        title: "title"
        description: "description"
        recurrence: "1"
    Goals:
      type: array
      items:
        $ref: '#/components/schemas/GoalWithId'
    SignUpForm:
      type: object
      additionalProperties: false
      properties:
        name:
          type: string
        email:
          type: string
          format: email
          pattern: '^[\w\.-]+@[a-zA-Z\d\.-]+\.[a-zA-Z]{2,}$'
        password:
          type: string
      required:
        - name
        - email
        - password

    LoginForm:
      type: object
      additionalProperties: false
      properties:
        email:
          type: string
          format: email
          pattern: '^[\w\.-]+@[a-zA-Z\d\.-]+\.[a-zA-Z]{2,}$'
        password:
          type: string
      required:
        - email
        - password

    LoginResponse:
      type: object
      properties:
        token:
          type: string
      required:
        - token

    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        username:
          type: string

    JoinedGoalResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Confirmation message of joining the goal
      example:
        message: "Successfully joined the goal"

    AlreadyJoinedGoalResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Error message. You've already joined this goal!
      example:
        message: "You have already joined this goal"

    LeftGoalResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          description: Confirmation message for leaving the goal
      example:
        message: "Successfully left the goal"
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT